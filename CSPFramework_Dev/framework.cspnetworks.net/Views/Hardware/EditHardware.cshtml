@model CSPLibrary.NewHardwareModel
@{
    ViewBag.Title = "EditHardware";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="col-lg-12 center" style="margin-left:9%">
    <div class="tableHeader col-lg-9">
        <h2>Edit Hardware Details</h2>
    </div>

    <div class="col-lg-8">
        @using (Html.BeginForm("UpdateHardware", "Hardware", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal" }))
        {

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            
            @Html.HiddenFor(m => m.Hardware_Id)
            <div class="form-group">
            </div>
            <div class="form-group">
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.Vendor_ID, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Vendor_ID, "VendorsList", new { @autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.Vendor_ID)
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.Serial_Number, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Serial_Number)
                    @Html.ValidationMessageFor(m => m.Serial_Number)
                </div>
            </div>
            
            <div class="form-group">
            @Html.LabelFor(m => m.Make, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(m => m.Make,"HardwareMakeList", new { @autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.Make)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Model, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Model)
                @Html.ValidationMessageFor(m => m.Model)
            </div>
        </div>
            
        <div class="form-group">
            @Html.LabelFor(m => m.Item, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(m => m.Item, "HardwareItemList")
                @Html.ValidationMessageFor(m => m.Item)
            </div>
        </div>
            
        <div class="form-group">
            @Html.LabelFor(m => m.Software_ID, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(m => m.Software_ID, "SoftwareList")
                @Html.ValidationMessageFor(m => m.Software_ID)
            </div>
        </div>    
            
        <div class="form-group">
            @Html.LabelFor(m => m.WarrantyStart, new { @class = "col-sm-3 control-label" })
            <div class="row">
                <div class="container">
                    <div class="col-sm-9">
                        <div class='input-group date' id="startDate_">
                            @Html.TextBoxFor(m => m.WarrantyStart)
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.WarrantyStart)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.WarrantyEnd, new { @class = "col-sm-3 control-label" })
            <div class="row">
                <div class="container">
                    <div class="col-sm-9">
                        <div class='input-group date' id="endDate_">
                            @Html.TextBoxFor(m => m.WarrantyEnd)
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.WarrantyEnd)
                    </div>
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(m => m.PurchasedBy, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(m => m.PurchasedBy, "PurchasedBy")
                @Html.ValidationMessageFor(m => m.PurchasedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ClientCode, new { @class = "col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.EditorFor(m => m.ClientId, "CustomersList")
                @Html.ValidationMessageFor(m => m.ClientId)
            </div>
        </div>
            
            
            
            <div class="form-group">
                @Html.LabelFor(m => m.Location, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Location)
                    @Html.ValidationMessageFor(m => m.Location)
                </div>
            </div>
       
            <div class="modal-footer">
                <a href="/Hardware/Index" class="btn">Cancel</a>
                <input type="submit" class="btn" value="Save" />
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/admin/css")
    @Scripts.Render("~/bundles/maskedEdit")
    @Scripts.Render("~/bundles/moment")
    @Styles.Render("~/bundles/bootstrap-datepicker-css")
    @Scripts.Render("~/bundles/bootstrap-datepicker")

    <script>
        $(document).ready(function () {
            // Initialize datepicker
            $("#startDate_").datetimepicker({
                pickTime: false
            });
            $("#endDate_").datetimepicker({
                pickTime: false
            });
            $("#startDate_").on("dp.change", function (e) {
                $('#endDate_').data("DateTimePicker").setMinDate(e.date);
            });
            $("#endDate_").on("dp.change", function (e) {
                $('#startDate_').data("DateTimePicker").setMaxDate(e.date);
            });
        });
    </script>
}